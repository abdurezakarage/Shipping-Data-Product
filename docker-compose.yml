version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: shipping_postgres
    environment:
      POSTGRES_DB: shipping_data_warehouse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Data Pipeline Application
  data_pipeline:
    build: .
    container_name: shipping_data_pipeline
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=shipping_data_warehouse
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DATA_LAKE_PATH=./data/raw/telegrammessages
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./dbt_project:/app/dbt_project
    working_dir: /app

  # DBT Development Environment
  dbt:
    build: .
    container_name: shipping_dbt
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=shipping_data_warehouse
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DBT_PROJECT_NAME=shipping_dbt_project
      - DBT_PROFILE_NAME=shipping_profile
    volumes:
      - ./dbt_project:/app/dbt_project
      - ./logs:/app/logs
    working_dir: /app/dbt_project
    command: ["tail", "-f", "/dev/null"]  # Keep container running for interactive use

volumes:
  postgres_data: 